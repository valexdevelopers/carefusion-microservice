// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// gastroenterology, oncology, peadiatrics, cardiology
model Clinic {
  id              String     @id @default(uuid())
  name            String     @unique
  description     String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  updatedBy             String?         // userId of the user who updated this role
  deletedAt             DateTime?       // soft delete
  deletedBy             String?  
}

model ConsultationType {
  id              String     @id @default(uuid())
  name            String     @unique
  description     String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  updatedBy             String?         // userId of the user who updated this role
  deletedAt             DateTime?       // soft delete
  deletedBy             String?  

  appointments          Appointment[]
}

// doctors and front desk can schedule appointment
model Appointment {
  id                          String     @id @default(uuid())
  hospitalId                  String
  date                        DateTime
  appointmentStartedAt        DateTime?
  appointmentEndedAt          DateTime?
  checkin                     Boolean? @default(false)
  checkinAt                   DateTime?
  status                      AppointmentStatus @default(SCHEDULED)
  reason                      ConsultationReason
  consultationTypeId          String
  patientId                   String
  doctorId                    String
  referralNote                String?
  referredById                String?

  createdAt                   DateTime   @default(now())
  updatedAt                   DateTime   @updatedAt
  updatedBy                   String?         // userId of the user who updated this role
  deletedAt                   DateTime?       // soft delete
  deletedBy                   String?  
  consultationType            ConsultationType @relation(fields: [consultationTypeId], references: [id], onDelete: NoAction)

  @@index([patientId])
  @@index([hospitalId])
  @@index([date])
  @@index([checkinAt])
  @@index([status])
  @@index([doctorId])
}

enum AppointmentStatus {
  SCHEDULED
  STARTED
  IN_PROGRESS
  CANCELLED
  COMPLETED
  NO_SHOW
}

enum ConsultationReason {
  FOLLOW_UP
  TEST_REVIEW
  EMERGENCY
  ROUTINE
  REFERRAL
  CHECKUP
  ANTENATAL
  POSTNATAL
  VACCINATION
  MEDICATION
  PHYSICAL_EXAMINATION
  LAB_TEST
  IMAGING
  PROCEDURE
  SURGERY
  REHABILITATION
  THERAPY
  COUNSELING
  EDUCATION
  MONITORING
  SCREENING
  PREVENTION
  OTHER
}